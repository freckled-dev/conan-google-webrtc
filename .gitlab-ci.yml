# variables:
#   # we can't cache files outside conan, so we set conan to a source dir
#   CONAN_USER_HOME: "$CI_PROJECT_DIR/.cache"
# use it with stonger machines. now it takes forever for doing the cache and it uses too much space.
# cache:
#   key: conan
#   paths:
#     - .cache

# we got no strong enough CI machine. reenable after we got one.
# TODO do a CONAN_USER_HOME per build, so that the build does NOT upload all
# already existing package builds. ensure the path to CONAN_USER_HOME is short
# because we need short_path support for the project to checkout and compile
.build windows debug:
  stage: build
  tags:
    - windows
    - dedicated
  script:
    - conan create --profile ./profiles/windows_debug ./webrtc
    - conan remote add -f freckled_webrtc "https://api.bintray.com/conan/freckled/google-webrtc"
    - conan user -p "$conan_api_password" --remote freckled_webrtc freckled
    - conan upload --all --confirm --remote freckled_webrtc google-*

.linux_build: &linux_build
  stage: build
  image: registry.gitlab.com/acof/webrtc-conan/ci/build_ubuntu:18.04
  tags:
    - docker
    - dedicated
    # - big

.conan_upload: &conan_upload
  <<: *linux_build
  after_script:
    - conan remote add gitlab "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/conan"
    - conan user -p "${CI_JOB_TOKEN}" --remote gitlab ci_user
    - conan upload --all --confirm --remote gitlab google-\*

build ubuntu 18.04 gcc7:
  <<: *linux_build
  script:
    - conan create --profile ./profiles/gcc7_relwithdebinfo ./webrtc
  <<: *conan_upload

.build ubuntu 18.04 arm:
  <<: *linux_build
  script:
    - conan create --profile ./profiles/linux_armv8_relwithdebinfo ./webrtc
    - conan create --keep-source --profile ./profiles/linux_armv7_relwithdebinfo ./webrtc
  <<: *conan_upload


